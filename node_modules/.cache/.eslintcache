[{"C:\\Users\\User\\store-robots-master\\src\\index.js":"1","C:\\Users\\User\\store-robots-master\\src\\reportWebVitals.js":"2","C:\\Users\\User\\store-robots-master\\src\\App.js":"3","C:\\Users\\User\\store-robots-master\\src\\Components\\Body\\MainBody.js":"4","C:\\Users\\User\\store-robots-master\\src\\Components\\Body\\Social.js":"5","C:\\Users\\User\\store-robots-master\\src\\Components\\Header\\Header.js":"6","C:\\Users\\User\\store-robots-master\\src\\Components\\Footer\\Footer.js":"7","C:\\Users\\User\\store-robots-master\\src\\Components\\Home\\PageHome.js":"8","C:\\Users\\User\\store-robots-master\\src\\Components\\VideoCarusol.js":"9","C:\\Users\\User\\store-robots-master\\src\\Components\\Header\\HeaderVideo.js":"10","C:\\Users\\User\\store-robots-master\\src\\Components\\Header\\Navbar.js":"11","C:\\Users\\User\\store-robots-master\\src\\Components\\allData\\SocialLinks.js":"12","C:\\Users\\User\\store-robots-master\\src\\Components\\allData\\videoSlider.js":"13","C:\\Users\\User\\store-robots-master\\src\\Components\\Home\\HomeVideo.js":"14"},{"size":675,"mtime":1668937357941,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1668937357961,"results":"17","hashOfConfig":"16"},{"size":205,"mtime":1668937357884,"results":"18","hashOfConfig":"16"},{"size":420,"mtime":1668937358052,"results":"19","hashOfConfig":"16"},{"size":900,"mtime":1668937358075,"results":"20","hashOfConfig":"16"},{"size":277,"mtime":1668937358211,"results":"21","hashOfConfig":"16"},{"size":21101,"mtime":1668967940579,"results":"22","hashOfConfig":"16"},{"size":42103,"mtime":1668968373558,"results":"23","hashOfConfig":"16"},{"size":979,"mtime":1668937358003,"results":"24","hashOfConfig":"16"},{"size":1750,"mtime":1668937358248,"results":"25","hashOfConfig":"16"},{"size":8490,"mtime":1668937702841,"results":"26","hashOfConfig":"16"},{"size":679,"mtime":1668938248424,"results":"27","hashOfConfig":"16"},{"size":3952,"mtime":1668937358521,"results":"28","hashOfConfig":"16"},{"size":327,"mtime":1668939649444,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n9jm6n",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\store-robots-master\\src\\index.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\App.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\Body\\MainBody.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\Body\\Social.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\Header\\Header.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\Footer\\Footer.js",["74"],[],"import React from 'react';\nimport { useEffect } from 'react';\nimport './Footer.css';\nconst Footer = () => {\n  useEffect(()=>{\n    var VanillaTilt = (function () {\n\n\n      class VanillaTilt {\n        constructor(element, settings = {}) {\n          if (!(element instanceof Node)) {\n          }\n      \n          this.width = null;\n          this.height = null;\n          this.clientWidth = null;\n          this.clientHeight = null;\n          this.left = null;\n          this.top = null;\n      \n          // for Gyroscope sampling\n          this.gammazero = null;\n          this.betazero = null;\n          this.lastgammazero = null;\n          this.lastbetazero = null;\n      \n          this.transitionTimeout = null;\n          this.updateCall = null;\n          this.event = null;\n      \n          this.updateBind = this.update.bind(this);\n          this.resetBind = this.reset.bind(this);\n      \n          this.element = element;\n          this.settings = this.extendSettings(settings);\n      \n          this.reverse = this.settings.reverse ? -1 : 1;\n          this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n          this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n          this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n          this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n          this.gyroscopeSamples = this.settings.gyroscopeSamples;\n      \n          this.elementListener = this.getElementListener();\n      \n          if (this.glare) {\n            this.prepareGlare();\n          }\n      \n          if (this.fullPageListening) {\n            this.updateClientSize();\n          }\n      \n          this.addEventListeners();\n          this.reset();\n          this.updateInitialPosition();\n        }\n      \n        static isSettingTrue(setting) {\n          return setting === \"\" || setting === true || setting === 1;\n        }\n      \n        /**\n         * Method returns element what will be listen mouse events\n         * @return {Node}\n         */\n        getElementListener() {\n          if (this.fullPageListening) {\n            return window.document;\n          }\n      \n          if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n            const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n      \n            if (mouseEventElement) {\n              return mouseEventElement;\n            }\n          }\n      \n          if (this.settings[\"mouse-event-element\"] instanceof Node) {\n            return this.settings[\"mouse-event-element\"];\n          }\n      \n          return this.element;\n        }\n      \n        /**\n         * Method set listen methods for this.elementListener\n         * @return {Node}\n         */\n        addEventListeners() {\n          this.onMouseEnterBind = this.onMouseEnter.bind(this);\n          this.onMouseMoveBind = this.onMouseMove.bind(this);\n          this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n          this.onWindowResizeBind = this.onWindowResize.bind(this);\n          this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n      \n          this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n          this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n          this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n      \n          if (this.glare || this.fullPageListening) {\n            window.addEventListener(\"resize\", this.onWindowResizeBind);\n          }\n      \n          if (this.gyroscope) {\n            window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n          }\n        }\n      \n        /**\n         * Method remove event listeners from current this.elementListener\n         */\n        removeEventListeners() {\n          this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n          this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n          this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n      \n          if (this.gyroscope) {\n            window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n          }\n      \n          if (this.glare || this.fullPageListening) {\n            window.removeEventListener(\"resize\", this.onWindowResizeBind);\n          }\n        }\n      \n        destroy() {\n          clearTimeout(this.transitionTimeout);\n          if (this.updateCall !== null) {\n            cancelAnimationFrame(this.updateCall);\n          }\n      \n          this.reset();\n      \n          this.removeEventListeners();\n          this.element.vanillaTilt = null;\n          delete this.element.vanillaTilt;\n      \n          this.element = null;\n        }\n      \n        onDeviceOrientation(event) {\n          if (event.gamma === null || event.beta === null) {\n            return;\n          }\n      \n          this.updateElementPosition();\n      \n          if (this.gyroscopeSamples > 0) {\n            this.lastgammazero = this.gammazero;\n            this.lastbetazero = this.betazero;\n      \n            if (this.gammazero === null) {\n              this.gammazero = event.gamma;\n              this.betazero = event.beta;\n            } else {\n              this.gammazero = (event.gamma + this.lastgammazero) / 2;\n              this.betazero = (event.beta + this.lastbetazero) / 2;\n            }\n      \n            this.gyroscopeSamples -= 1;\n          }\n      \n          const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n          const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n      \n          const degreesPerPixelX = totalAngleX / this.width;\n          const degreesPerPixelY = totalAngleY / this.height;\n      \n          const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n          const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n      \n          const posX = angleX / degreesPerPixelX;\n          const posY = angleY / degreesPerPixelY;\n      \n          if (this.updateCall !== null) {\n            cancelAnimationFrame(this.updateCall);\n          }\n      \n          this.event = {\n            clientX: posX + this.left,\n            clientY: posY + this.top,\n          };\n      \n          this.updateCall = requestAnimationFrame(this.updateBind);\n        }\n      \n        onMouseEnter() {\n          this.updateElementPosition();\n          this.element.style.willChange = \"transform\";\n          this.setTransition();\n        }\n      \n        onMouseMove(event) {\n          if (this.updateCall !== null) {\n            cancelAnimationFrame(this.updateCall);\n          }\n      \n          this.event = event;\n          this.updateCall = requestAnimationFrame(this.updateBind);\n        }\n      \n        onMouseLeave() {\n          this.setTransition();\n      \n          if (this.settings.reset) {\n            requestAnimationFrame(this.resetBind);\n          }\n        }\n      \n        reset() {\n          this.event = {\n            clientX: this.left + this.width / 2,\n            clientY: this.top + this.height / 2\n          };\n      \n          if (this.element && this.element.style) {\n            this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\n              `rotateX(0deg) ` +\n              `rotateY(0deg) ` +\n              `scale3d(1, 1, 1)`;\n          }\n      \n          this.resetGlare();\n        }\n      \n        resetGlare() {\n          if (this.glare) {\n            this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n            this.glareElement.style.opacity = \"0\";\n          }\n        }\n      \n        updateInitialPosition() {\n          if (this.settings.startX === 0 && this.settings.startY === 0) {\n            return;\n          }\n      \n          this.onMouseEnter();\n      \n          if (this.fullPageListening) {\n            this.event = {\n              clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n              clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n            };\n          } else {\n            this.event = {\n              clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\n              clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\n            };\n          }\n      \n      \n          let backupScale = this.settings.scale;\n          this.settings.scale = 1;\n          this.update();\n          this.settings.scale = backupScale;\n          this.resetGlare();\n        }\n      \n        getValues() {\n          let x, y;\n      \n          if (this.fullPageListening) {\n            x = this.event.clientX / this.clientWidth;\n            y = this.event.clientY / this.clientHeight;\n          } else {\n            x = (this.event.clientX - this.left) / this.width;\n            y = (this.event.clientY - this.top) / this.height;\n          }\n      \n          x = Math.min(Math.max(x, 0), 1);\n          y = Math.min(Math.max(y, 0), 1);\n      \n          let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n          let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n          let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n      \n          return {\n            tiltX: tiltX,\n            tiltY: tiltY,\n            percentageX: x * 100,\n            percentageY: y * 100,\n            angle: angle\n          };\n        }\n      \n        updateElementPosition() {\n          let rect = this.element.getBoundingClientRect();\n      \n          this.width = this.element.offsetWidth;\n          this.height = this.element.offsetHeight;\n          this.left = rect.left;\n          this.top = rect.top;\n        }\n      \n        update() {\n          let values = this.getValues();\n      \n          this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\n            \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\n            \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\n            \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n      \n          if (this.glare) {\n            this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n            this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n          }\n      \n          this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n            \"detail\": values\n          }));\n      \n          this.updateCall = null;\n        }\n      \n        /**\n         * Appends the glare element (if glarePrerender equals false)\n         * and sets the default style\n         */\n        prepareGlare() {\n          // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n          if (!this.glarePrerender) {\n            // Create glare element\n            const jsTiltGlare = document.createElement(\"div\");\n            jsTiltGlare.classList.add(\"js-tilt-glare\");\n      \n            const jsTiltGlareInner = document.createElement(\"div\");\n            jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n      \n            jsTiltGlare.appendChild(jsTiltGlareInner);\n            this.element.appendChild(jsTiltGlare);\n          }\n      \n          this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n          this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n      \n          if (this.glarePrerender) {\n            return;\n          }\n      \n          Object.assign(this.glareElementWrapper.style, {\n            \"position\": \"absolute\",\n            \"top\": \"0\",\n            \"left\": \"0\",\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"overflow\": \"hidden\",\n            \"pointer-events\": \"none\"\n          });\n      \n          Object.assign(this.glareElement.style, {\n            \"position\": \"absolute\",\n            \"top\": \"50%\",\n            \"left\": \"50%\",\n            \"pointer-events\": \"none\",\n            \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n            \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n            \"transform-origin\": \"0% 0%\",\n            \"opacity\": \"0\",\n          });\n      \n          this.updateGlareSize();\n        }\n      \n        updateGlareSize() {\n          if (this.glare) {\n            const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n      \n            Object.assign(this.glareElement.style, {\n              \"width\": `${glareSize}px`,\n              \"height\": `${glareSize}px`,\n            });\n          }\n        }\n      \n        updateClientSize() {\n          this.clientWidth = window.innerWidth\n            || document.documentElement.clientWidth\n            || document.body.clientWidth;\n      \n          this.clientHeight = window.innerHeight\n            || document.documentElement.clientHeight\n            || document.body.clientHeight;\n        }\n      \n        onWindowResize() {\n          this.updateGlareSize();\n          this.updateClientSize();\n        }\n      \n        setTransition() {\n          clearTimeout(this.transitionTimeout);\n          this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n          if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n      \n          this.transitionTimeout = setTimeout(() => {\n            this.element.style.transition = \"\";\n            if (this.glare) {\n              this.glareElement.style.transition = \"\";\n            }\n          }, this.settings.speed);\n      \n        }\n      \n        /**\n         * Method return patched settings of instance\n         * @param {boolean} settings.reverse - reverse the tilt direction\n         * @param {number} settings.max - max tilt rotation (degrees)\n         * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\n         * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\n         * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\n         * @param {string} settings.easing - Easing on enter/exit\n         * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\n         * @param {number} settings.speed - Speed of the enter/exit transition\n         * @param {boolean} settings.transition - Set a transition on enter/exit\n         * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\n         * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\n         * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\n         * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\n         * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\n         * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\n         * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\n         * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\n         * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\n         * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\n         */\n        extendSettings(settings) {\n          let defaultSettings = {\n            reverse: false,\n            max: 15,\n            startX: 0,\n            startY: 0,\n            perspective: 1000,\n            easing: \"cubic-bezier(.03,.98,.52,.99)\",\n            scale: 1,\n            speed: 300,\n            transition: true,\n            axis: null,\n            glare: false,\n            \"max-glare\": 1,\n            \"glare-prerender\": false,\n            \"full-page-listening\": false,\n            \"mouse-event-element\": null,\n            reset: true,\n            gyroscope: true,\n            gyroscopeMinAngleX: -45,\n            gyroscopeMaxAngleX: 45,\n            gyroscopeMinAngleY: -45,\n            gyroscopeMaxAngleY: 45,\n            gyroscopeSamples: 10\n          };\n      \n          let newSettings = {};\n          for (var property in defaultSettings) {\n            if (property in settings) {\n              newSettings[property] = settings[property];\n            } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n              let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n              try {\n                newSettings[property] = JSON.parse(attribute);\n              } catch (e) {\n                newSettings[property] = attribute;\n              }\n      \n            } else {\n              newSettings[property] = defaultSettings[property];\n            }\n          }\n      \n          return newSettings;\n        }\n      \n        static init(elements, settings) {\n          if (elements instanceof Node) {\n            elements = [elements];\n          }\n      \n          if (elements instanceof NodeList) {\n            elements = [].slice.call(elements);\n          }\n      \n          if (!(elements instanceof Array)) {\n            return;\n          }\n      \n          elements.forEach((element) => {\n            if (!(\"vanillaTilt\" in element)) {\n              element.vanillaTilt = new VanillaTilt(element, settings);\n            }\n          });\n        }\n      }\n      \n      if (typeof document !== \"undefined\") {\n        /* expose the class to window */\n        window.VanillaTilt = VanillaTilt;\n      \n        /**\n         * Auto load\n         */\n        VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n      }\n      \n      return VanillaTilt;\n      \n      }());\n      \n  })\n    return (\n        <div className=\"container-fluid footer\">\n        {/* <p className=\"bgtxt\">SUBSCRIBE</p> */}\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img src={require(\"../../assets/roche-robots-logo-v4-transformed.png\")} alt=\"\" />\n              <p>\n                Our mission at Roche Robotics is to motivate and enable people of\n                all ages and requirements to develop and live their lives to the\n                fullest.\n              </p>\n            </div>\n            <div className=\"col-md-4 opacity\">\n              <ul>\n                <li><a href=\"/\">Home</a></li>\n                <li><a href=\"/\">About</a></li>\n                <li><a href=\"/\">Products</a></li>\n                <li><a href=\"/\">Services</a></li>\n                <li><a href=\"/\">Demonstration</a></li>\n                <li><a href=\"/\">News</a></li>\n                <li><a href=\"mailto:steve@rocherobots.com\">Contact Us</a></li>\n              </ul>\n            </div>\n            <div data-tilt data-tilt-glare data-tilt-max-glare=\"0.3\" className=\"col-md-4 news-letter\">\n              <h4>NEWSLETTER.</h4>\n              <form   action=\"\" >\n                <input type=\"email\" placeholder=\"Email\" />\n                <button type=\"submit\">Subscribe</button>\n              </form>\n            </div>\n          </div>\n          <ul className=\"logo-deck py-4 social-media\">\n                    <li>\n                        <a href=\"https://www.facebook.com/Roche-Robots-108933881918473/\"\n                        ><i className=\"fa-brands fa-facebook-f\"></i ></a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.instagram.com/roche_robots/\"\n                        ><i className=\"fa-brands fa-instagram\"></i ></a>\n                    </li>\n                    <li>\n                        <a href=\"https://twitter.com/rocherobotics\"\n                        ><i className=\"fa-brands fa-twitter\"></i></a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.linkedin.com/in/roche-robots/\"  ><i className=\"fa-brands fa-linkedin-in\"></i></a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.youtube.com/channel/UCfUkARb1WMNYF0xJFq07caQ\"><i className=\"fa-brands fa-youtube\"></i></a>\n                    </li>\n                </ul>\n                <div className=\"copyright\">\n                    Copyright 2022, Roche Robots. All Rights Reserved.\n                </div>\n           </div>\n      </div>\n      );\n};\n\nexport default Footer;","C:\\Users\\User\\store-robots-master\\src\\Components\\Home\\PageHome.js",["75"],[],"import React,{useEffect} from 'react';\nimport VideoCarusol from '../VideoCarusol';\nconst PageHome = () => {\n\n  useEffect(()=>{\n    \n    const readMore = document.querySelectorAll(\".reveal-toggler\");\n    const readMoreLabel = document.querySelectorAll(\".reveal-btn\");\n    const visibleText = document.querySelectorAll(\".visible-text\");\n    const hiddenText = document.querySelectorAll(\".hidden-text\");\n    \n    readMore.forEach((el, index) => {\n      el.onchange = () => {\n        if (el.checked) {\n          visibleText[index].style.display = \"none\";\n          hiddenText[index].style.display = \"block\";\n          readMoreLabel[index].innerHTML = \"READ LESS\";\n        } else {\n          hiddenText[index].style.display = \"none\";\n          visibleText[index].style.display = \"block\";\n          readMoreLabel[index].innerHTML = \"READ MORE\";\n        }\n      };\n    })\n    var VanillaTilt = (function () {\n\n\n      class VanillaTilt {\n        constructor(element, settings = {}) {\n          if (!(element instanceof Node)) {\n          }\n      \n          this.width = null;\n          this.height = null;\n          this.clientWidth = null;\n          this.clientHeight = null;\n          this.left = null;\n          this.top = null;\n      \n          // for Gyroscope sampling\n          this.gammazero = null;\n          this.betazero = null;\n          this.lastgammazero = null;\n          this.lastbetazero = null;\n      \n          this.transitionTimeout = null;\n          this.updateCall = null;\n          this.event = null;\n      \n          this.updateBind = this.update.bind(this);\n          this.resetBind = this.reset.bind(this);\n      \n          this.element = element;\n          this.settings = this.extendSettings(settings);\n      \n          this.reverse = this.settings.reverse ? -1 : 1;\n          this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n          this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n          this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n          this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n          this.gyroscopeSamples = this.settings.gyroscopeSamples;\n      \n          this.elementListener = this.getElementListener();\n      \n          if (this.glare) {\n            this.prepareGlare();\n          }\n      \n          if (this.fullPageListening) {\n            this.updateClientSize();\n          }\n      \n          this.addEventListeners();\n          this.reset();\n          this.updateInitialPosition();\n        }\n      \n        static isSettingTrue(setting) {\n          return setting === \"\" || setting === true || setting === 1;\n        }\n      \n        /**\n         * Method returns element what will be listen mouse events\n         * @return {Node}\n         */\n        getElementListener() {\n          if (this.fullPageListening) {\n            return window.document;\n          }\n      \n          if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n            const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n      \n            if (mouseEventElement) {\n              return mouseEventElement;\n            }\n          }\n      \n          if (this.settings[\"mouse-event-element\"] instanceof Node) {\n            return this.settings[\"mouse-event-element\"];\n          }\n      \n          return this.element;\n        }\n      \n        /**\n         * Method set listen methods for this.elementListener\n         * @return {Node}\n         */\n        addEventListeners() {\n          this.onMouseEnterBind = this.onMouseEnter.bind(this);\n          this.onMouseMoveBind = this.onMouseMove.bind(this);\n          this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n          this.onWindowResizeBind = this.onWindowResize.bind(this);\n          this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n      \n          this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n          this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n          this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n      \n          if (this.glare || this.fullPageListening) {\n            window.addEventListener(\"resize\", this.onWindowResizeBind);\n          }\n      \n          if (this.gyroscope) {\n            window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n          }\n        }\n      \n        /**\n         * Method remove event listeners from current this.elementListener\n         */\n        removeEventListeners() {\n          this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n          this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n          this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n      \n          if (this.gyroscope) {\n            window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n          }\n      \n          if (this.glare || this.fullPageListening) {\n            window.removeEventListener(\"resize\", this.onWindowResizeBind);\n          }\n        }\n      \n        destroy() {\n          clearTimeout(this.transitionTimeout);\n          if (this.updateCall !== null) {\n            cancelAnimationFrame(this.updateCall);\n          }\n      \n          this.reset();\n      \n          this.removeEventListeners();\n          this.element.vanillaTilt = null;\n          delete this.element.vanillaTilt;\n      \n          this.element = null;\n        }\n      \n        onDeviceOrientation(event) {\n          if (event.gamma === null || event.beta === null) {\n            return;\n          }\n      \n          this.updateElementPosition();\n      \n          if (this.gyroscopeSamples > 0) {\n            this.lastgammazero = this.gammazero;\n            this.lastbetazero = this.betazero;\n      \n            if (this.gammazero === null) {\n              this.gammazero = event.gamma;\n              this.betazero = event.beta;\n            } else {\n              this.gammazero = (event.gamma + this.lastgammazero) / 2;\n              this.betazero = (event.beta + this.lastbetazero) / 2;\n            }\n      \n            this.gyroscopeSamples -= 1;\n          }\n      \n          const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n          const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n      \n          const degreesPerPixelX = totalAngleX / this.width;\n          const degreesPerPixelY = totalAngleY / this.height;\n      \n          const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n          const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n      \n          const posX = angleX / degreesPerPixelX;\n          const posY = angleY / degreesPerPixelY;\n      \n          if (this.updateCall !== null) {\n            cancelAnimationFrame(this.updateCall);\n          }\n      \n          this.event = {\n            clientX: posX + this.left,\n            clientY: posY + this.top,\n          };\n      \n          this.updateCall = requestAnimationFrame(this.updateBind);\n        }\n      \n        onMouseEnter() {\n          this.updateElementPosition();\n          this.element.style.willChange = \"transform\";\n          this.setTransition();\n        }\n      \n        onMouseMove(event) {\n          if (this.updateCall !== null) {\n            cancelAnimationFrame(this.updateCall);\n          }\n      \n          this.event = event;\n          this.updateCall = requestAnimationFrame(this.updateBind);\n        }\n      \n        onMouseLeave() {\n          this.setTransition();\n      \n          if (this.settings.reset) {\n            requestAnimationFrame(this.resetBind);\n          }\n        }\n      \n        reset() {\n          this.event = {\n            clientX: this.left + this.width / 2,\n            clientY: this.top + this.height / 2\n          };\n      \n          if (this.element && this.element.style) {\n            this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\n              `rotateX(0deg) ` +\n              `rotateY(0deg) ` +\n              `scale3d(1, 1, 1)`;\n          }\n      \n          this.resetGlare();\n        }\n      \n        resetGlare() {\n          if (this.glare) {\n            this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n            this.glareElement.style.opacity = \"0\";\n          }\n        }\n      \n        updateInitialPosition() {\n          if (this.settings.startX === 0 && this.settings.startY === 0) {\n            return;\n          }\n      \n          this.onMouseEnter();\n      \n          if (this.fullPageListening) {\n            this.event = {\n              clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n              clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n            };\n          } else {\n            this.event = {\n              clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\n              clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\n            };\n          }\n      \n      \n          let backupScale = this.settings.scale;\n          this.settings.scale = 1;\n          this.update();\n          this.settings.scale = backupScale;\n          this.resetGlare();\n        }\n      \n        getValues() {\n          let x, y;\n      \n          if (this.fullPageListening) {\n            x = this.event.clientX / this.clientWidth;\n            y = this.event.clientY / this.clientHeight;\n          } else {\n            x = (this.event.clientX - this.left) / this.width;\n            y = (this.event.clientY - this.top) / this.height;\n          }\n      \n          x = Math.min(Math.max(x, 0), 1);\n          y = Math.min(Math.max(y, 0), 1);\n      \n          let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n          let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n          let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n      \n          return {\n            tiltX: tiltX,\n            tiltY: tiltY,\n            percentageX: x * 100,\n            percentageY: y * 100,\n            angle: angle\n          };\n        }\n      \n        updateElementPosition() {\n          let rect = this.element.getBoundingClientRect();\n      \n          this.width = this.element.offsetWidth;\n          this.height = this.element.offsetHeight;\n          this.left = rect.left;\n          this.top = rect.top;\n        }\n      \n        update() {\n          let values = this.getValues();\n      \n          this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\n            \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\n            \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\n            \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n      \n          if (this.glare) {\n            this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n            this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n          }\n      \n          this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n            \"detail\": values\n          }));\n      \n          this.updateCall = null;\n        }\n      \n        /**\n         * Appends the glare element (if glarePrerender equals false)\n         * and sets the default style\n         */\n        prepareGlare() {\n          // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n          if (!this.glarePrerender) {\n            // Create glare element\n            const jsTiltGlare = document.createElement(\"div\");\n            jsTiltGlare.classList.add(\"js-tilt-glare\");\n      \n            const jsTiltGlareInner = document.createElement(\"div\");\n            jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n      \n            jsTiltGlare.appendChild(jsTiltGlareInner);\n            this.element.appendChild(jsTiltGlare);\n          }\n      \n          this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n          this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n      \n          if (this.glarePrerender) {\n            return;\n          }\n      \n          Object.assign(this.glareElementWrapper.style, {\n            \"position\": \"absolute\",\n            \"top\": \"0\",\n            \"left\": \"0\",\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"overflow\": \"hidden\",\n            \"pointer-events\": \"none\"\n          });\n      \n          Object.assign(this.glareElement.style, {\n            \"position\": \"absolute\",\n            \"top\": \"50%\",\n            \"left\": \"50%\",\n            \"pointer-events\": \"none\",\n            \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n            \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n            \"transform-origin\": \"0% 0%\",\n            \"opacity\": \"0\",\n          });\n      \n          this.updateGlareSize();\n        }\n      \n        updateGlareSize() {\n          if (this.glare) {\n            const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n      \n            Object.assign(this.glareElement.style, {\n              \"width\": `${glareSize}px`,\n              \"height\": `${glareSize}px`,\n            });\n          }\n        }\n      \n        updateClientSize() {\n          this.clientWidth = window.innerWidth\n            || document.documentElement.clientWidth\n            || document.body.clientWidth;\n      \n          this.clientHeight = window.innerHeight\n            || document.documentElement.clientHeight\n            || document.body.clientHeight;\n        }\n      \n        onWindowResize() {\n          this.updateGlareSize();\n          this.updateClientSize();\n        }\n      \n        setTransition() {\n          clearTimeout(this.transitionTimeout);\n          this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n          if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n      \n          this.transitionTimeout = setTimeout(() => {\n            this.element.style.transition = \"\";\n            if (this.glare) {\n              this.glareElement.style.transition = \"\";\n            }\n          }, this.settings.speed);\n      \n        }\n      \n        /**\n         * Method return patched settings of instance\n         * @param {boolean} settings.reverse - reverse the tilt direction\n         * @param {number} settings.max - max tilt rotation (degrees)\n         * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\n         * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\n         * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\n         * @param {string} settings.easing - Easing on enter/exit\n         * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\n         * @param {number} settings.speed - Speed of the enter/exit transition\n         * @param {boolean} settings.transition - Set a transition on enter/exit\n         * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\n         * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\n         * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\n         * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\n         * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\n         * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\n         * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\n         * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\n         * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\n         * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\n         */\n        extendSettings(settings) {\n          let defaultSettings = {\n            reverse: false,\n            max: 15,\n            startX: 0,\n            startY: 0,\n            perspective: 1000,\n            easing: \"cubic-bezier(.03,.98,.52,.99)\",\n            scale: 1,\n            speed: 300,\n            transition: true,\n            axis: null,\n            glare: false,\n            \"max-glare\": 1,\n            \"glare-prerender\": false,\n            \"full-page-listening\": false,\n            \"mouse-event-element\": null,\n            reset: true,\n            gyroscope: true,\n            gyroscopeMinAngleX: -45,\n            gyroscopeMaxAngleX: 45,\n            gyroscopeMinAngleY: -45,\n            gyroscopeMaxAngleY: 45,\n            gyroscopeSamples: 10\n          };\n      \n          let newSettings = {};\n          for (var property in defaultSettings) {\n            if (property in settings) {\n              newSettings[property] = settings[property];\n            } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n              let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n              try {\n                newSettings[property] = JSON.parse(attribute);\n              } catch (e) {\n                newSettings[property] = attribute;\n              }\n      \n            } else {\n              newSettings[property] = defaultSettings[property];\n            }\n          }\n      \n          return newSettings;\n        }\n      \n        static init(elements, settings) {\n          if (elements instanceof Node) {\n            elements = [elements];\n          }\n      \n          if (elements instanceof NodeList) {\n            elements = [].slice.call(elements);\n          }\n      \n          if (!(elements instanceof Array)) {\n            return;\n          }\n      \n          elements.forEach((element) => {\n            if (!(\"vanillaTilt\" in element)) {\n              element.vanillaTilt = new VanillaTilt(element, settings);\n            }\n          });\n        }\n      }\n      \n      if (typeof document !== \"undefined\") {\n        /* expose the class to window */\n        window.VanillaTilt = VanillaTilt;\n      \n        /**\n         * Auto load\n         */\n        VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n      }\n      \n      return VanillaTilt;\n      \n      }());\n\n\n  } )\n\n    \n    return (\n        <div>\n                <div className=\"container-fluid about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 animate hook1\">\n            <h3>FUTURE IS NOW</h3>\n            <h2>ABOUT US</h2>\n            <p>\n              At Roche Robots, we firmly believe robotics will improve societal\n              well-being and solve common issues. Robotics can make a difference\n              by working alongside people, helping with household chores, and\n              improving industrial workflow efficiency. They help bridge the\n              staff shortages gap and are capable of so much more than we can\n              currently imagine. <br /><br />\n              Roche Robots is dedicated to developing innovative robotics\n              solutions that make a difference in the world.\n            </p>\n            <a href=\"mailto:steve@rocherobots.com\">Contact Us</a>\n          </div>\n          <div className=\"col-md-6 animate hook2\">\n            <img src={require(\"../../assets/eset-robot-full.png\")} alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"container-fluid services\">\n      <p className=\"bgtxt\" data-speed=\"8\" data-factor=\"800\">OUR SERVICES</p>\n      <div className=\"container\">\n        <h2>OUR SERVICES</h2>\n        <h3>SOLUTION & FOCUS AREA</h3>\n        <div className=\"row row-cols-lg-3 row-cols-md-2 row-cols-1\">\n          <div data-tilt data-tilt-glare data-tilt-max-glare=\"0.3\" className=\"col\">\n            <div className=\"card animate hook3\">\n              <img src={require(\"../../assets/1333669-200 1.png\")} alt=\"\" />\n              <h4>Setup and Delivery</h4>\n              <p className=\"visible-text\">\n                When you receive your robot, the first thing you'll need to do\n                is set it up. Depending on your chosen model ...\n              </p>\n              <p className=\"hidden-text\">\n                When you receive your robot, the first thing you'll need to do\n                is set it up. Depending on your chosen model, this could be a\n                simple or more complex process. We'll provide you with all the\n                instructions you need and online support if you have any\n                questions. Once your robot is up and running, we'll give you\n                comprehensive training on all its features. This will help you\n                to get the most out of your new companion. You'll learn to use\n                its basic functions and more advanced features such as\n                programming and customizing its behavior. <br /><br />\n                We want you to be comfortable with your robot, so we'll take the\n                time to make sure you understand everything. By the end of the\n                training, you'll be an expert on your new robot and ready to\n                start enjoying all its benefits. Most robots will come with an\n                android screen, so getting to know this menu will be a must. The\n                first thing you'll want to do is navigate to the settings menu.\n                From here, you can adjust various aspects of your robot's\n                behavior. <br /><br />\n                You can choose which programs to install on your robot. If\n                you're adventurous, you can explore the wide world of android\n                apps. There are thousands of apps available, many designed\n                specifically for robots. Read the reviews before downloading\n                anything.\n              </p>\n              <input type=\"checkbox\" id=\"read1\" className=\"reveal-toggler\" />\n              <label for=\"read1\" className=\"reveal-btn\">READ MORE</label>\n            </div>\n          </div>\n          <div  data-tilt data-tilt-glare data-tilt-max-glare=\"0.3\" className=\"col\">\n            <div className=\"card animate hook3\">\n              <img src={require(\"../../assets/1333669-200 2.png\")} alt=\"\" />\n              <h4>Program Coding</h4>\n              <p className=\"visible-text\">\n                Before you buy a robot, it is important to consider what tasks\n                you need it to perform and how much space you ...\n              </p>\n              <p className=\"hidden-text\">\n                Before you buy a robot, it is important to consider what tasks\n                you need it to perform and howimport YouTubeVideo from './../Body/YouTubeVideo';\n much space you have available.\n                You also want to think about whether you need a robot that can\n                move around freely or one that is stationary. Our team can help\n                you to assess your needs and choose the right model for your\n                home or office. We also offer a comprehensive set-up service, so\n                you can be sure your new robot will be up and running smoothly.\n                <br />\n                <br />\n                We provide ongoing support and maintenance, so you can always\n                keep your robot in peak condition. Whether you're looking for a\n                basic model or a top-of-the-line machine, our team can help you\n                to find the perfect solution for your needs. That’s why we\n                provide programming and repair services for our clients. Our\n                team is well-versed in several coding languages, so we can help\n                with whatever robot you might need. We're also updating our\n                services to ensure we provide the best care for your robot.\n              </p>\n              <input type=\"checkbox\" id=\"read2\" className=\"reveal-toggler\" />\n              <label for=\"read2\" className=\"reveal-btn\">READ MORE</label>\n            </div>\n          </div>\n          <div data-tilt data-tilt-glare data-tilt-max-glare=\"0.3\" className=\"col\">\n            <div className=\"card animate hook3\">\n              <img src={require(\"../../assets/1333669-200 3.png\")} alt=\"\" />\n              <h4>Repairs and Maintenance</h4>\n              <p className=\"visible-text\">\n                When your robot needs repairs, don't worry. Roche Robots has you\n                covered. We offer high-quality services to our ...\n              </p>\n              <p className=\"hidden-text\">\n                When your robot needs repairs, don't worry. Roche Robots has you\n                covered. We offer high-quality services to our customers in\n                preventive and corrective maintenance, diagnosis, and equipment\n                repair. We want to ensure your robot is always up and running so\n                you can continue benefiting from all it offers. We know you're\n                busy, so we make it easy for you. You can either bring your\n                robot to us, or we can come to you. Our team is dedicated to\n                providing you with the best possible experience.\n              </p>\n              <input type=\"checkbox\" id=\"read3\" className=\"reveal-toggler\" />\n              <label for=\"read3\" className=\"reveal-btn\">READ MORE</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"container-fluid video2\">\n      {/* <i className=\"fa-solid fa-angle-left\" id=\"player-prev\"></i>\n      <i className=\"fa-solid fa-angle-right\" id=\"player-next\"></i> */}\n      <div className=\"container\">\n        {/* <h3> </h3>\n        <div id=\"player\"></div>\n        <div className=\"pagination\"></div>\n        <p></p> */}\n        <VideoCarusol></VideoCarusol>\n      </div>\n    </div>\n    <div className=\"container-fluid robotics py-5\">\n      <div className=\"container\">\n        <h2>ROBOTICS</h2>\n        <h3>PROFESSIONAL AND BUSINESS ROBOTS</h3>\n        <div className=\"row\">\n          <div className=\"col-md-6 image-deck\">\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture1.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture2.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture3.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture4.png\")} alt=\"\" />\n            </div>\n          </div>\n          <div className=\"col-md-6 animate hook2\">\n            <h4>Medical robots</h4>\n            <p className=\"visible-text\">\n              One of the most promising applications of medical robots we\n              specialize in is in the field of surgery. Traditionally, surgery\n              has been highly invasive, requiring large incisions and long\n              recovery times. However, surgical robots are changing all that.\n              These machines can help doctors accurately perform delicate\n              operations, resulting in shorter incisions and recovery periods.\n              In addition, surgical robots can often ...\n            </p>\n            <p className=\"hidden-text\">\n              One of the most promising applications of medical robots we\n              specialize in is in the field of surgery. Traditionally, surgery\n              has been highly invasive, requiring large incisions and long\n              recovery times. However, surgical robots are changing all that.\n              These machines can help doctors accurately perform delicate\n              operations, resulting in shorter incisions and recovery periods.\n              In addition, surgical robots can often reach areas of the body\n              that would be otherwise inaccessible to human surgeons. As a\n              result, they are opening up new frontiers in medicine.\n              <br /><br />\n              Medical robots are also being used in other areas of medicine. For\n              example, robots are now being used to dispense medication in\n              hospitals and clinics. These machines can accurately measure and\n              dispense medications, which can help reduce errors and improve\n              patient safety. In addition, medical robots are being used to\n              assist in physical therapy and rehabilitation. These machines can\n              help patients regain strength and mobility after an injury or\n              illness.\n            </p>\n            <input type=\"checkbox\" id=\"read4\" className=\"reveal-toggler\" />\n            <label for=\"read4\" className=\"reveal-btn\">READ MORE</label>\n          </div>\n        </div>\n        <div className=\"row flex-wrap-reverse\">\n          <div className=\"col-md-6 animate hook1\">\n            <h4>Delivery Robots</h4>\n            <p className=\"visible-text\">\n              Delivery robots will revolutionize the way we have done things for\n              thousands of years. A doctor will never be out of reach of his\n              equipment when the cabinet of medical equipment will come to him\n              when he calls to the cabinet. Restaurants will be able to set and\n              clear tables with the use of robots. They will take orders, run\n              errands, seat people at tables and even take payment. Airlines\n              robots will greet you exiting the ...\n            </p>\n            <p className=\"hidden-text\">\n              Delivery robots will revolutionize the way we have done things for\n              thousands of years. A doctor will never be out of reach of his\n              equipment when the cabinet of medical equipment will come to him\n              when he calls to the cabinet. Restaurants will be able to set and\n              clear tables with the use of robots. They will take orders, run\n              errands, seat people at tables and even take payment. Airlines\n              robots will greet you exiting the plane and carry your baggage to\n              the pickup zone. Now, with a combination of sensors, cameras,\n              facial recognition, and mobile technology, delivery robots will\n              make business more cost-efficient, while working tirelessly,\n              faster and smarter.\n            </p>\n            <input type=\"checkbox\" id=\"read5\" className=\"reveal-toggler\" />\n            <label for=\"read5\" className=\"reveal-btn\">READ MORE</label>\n          </div>\n          <div className=\"col-md-6 image-deck\">\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture5.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture6.jpg\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture7.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture8.png\")} alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 image-deck\">\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture9.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture10.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture11.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture12.jpg\")} alt=\"\" />\n            </div>\n          </div>\n          <div className=\"col-md-6 animate hook2\">\n            <h4>Commercial Robots</h4>\n            <p className=\"visible-text\">\n              A commercial robot is a robot that helps simplify or automate a\n              task without physically interacting with it. For example, you may\n              have seen airport commercial robots that help guide passengers to\n              their gates. Other common examples include self-checkout machines\n              in grocery stores and automated teller machines (ATMs). Many\n              commercial robots are designed to interact ...\n            </p>\n            <p className=\"hidden-text\">\n              A commercial robot is a robot that helps simplify or automate a\n              task without physically interacting with it. For example, you may\n              have seen airport commercial robots that help guide passengers to\n              their gates. Other common examples include self-checkout machines\n              in grocery stores and automated teller machines (ATMs). Many\n              commercial robots are designed to interact with people. This\n              requires them to have sensors and cameras to detect people and\n              objects around them. <br /><br />\n              They also need software algorithms to interpret this data and\n              decide how to react. For example, our company's commercial robots\n              are equipped with these features to help them navigate crowded\n              areas and avoid obstacles. The benefits of commercial robots\n              include increased efficiency, safety, and accuracy. For instance,\n              they can reduce wait times in airports by quickly directing\n              passengers to open gates. They can also help reduce factory\n              accidents by replacing humans in dangerous tasks. <br /><br />\n              In many cases, commercial robots can do things better than humans.\n              For instance, they can work longer hours without getting tired and\n              make fewer mistakes. This is why commercial robots are\n              increasingly being used in a variety of industries around the\n              world.\n            </p>\n            <input type=\"checkbox\" id=\"read6\" className=\"reveal-toggler\" />\n            <label for=\"read6\" className=\"reveal-btn\">READ MORE</label>\n          </div>\n        </div>\n        <div className=\"row flex-wrap-reverse\">\n          <div className=\"col-md-6 animate hook1\">\n            <h4>Telepresence robots</h4>\n            <p className=\"visible-text\">\n              Telepresence robots are designed to provide a remote presence for\n              workers who cannot be on site. These robots are equipped with\n              cameras and sensors to navigate their environment and interact\n              with people. One benefit of telepresence robots is that they can\n              help to reduce travel costs by allowing workers to participate in\n              meetings and events from anywhere in the world ...\n            </p>\n            <p className=\"hidden-text\">\n              Telepresence robots are designed to provide a remote presence for\n              workers who cannot be on site. These robots are equipped with\n              cameras and sensors to navigate their environment and interact\n              with people. One benefit of telepresence robots is that they can\n              help to reduce travel costs by allowing workers to participate in\n              meetings and events from anywhere in the world. <br /><br />\n              Additionally, telepresence robots can increase productivity by\n              allowing employees to work from home or other remote locations.\n              Telepresence robots are also becoming increasingly popular in\n              healthcare as they can provide patients with remote access to\n              doctors and nurses. Telepresence robots will likely play an even\n              more significant role in the workplace and healthcare industry.\n            </p>\n            <input type=\"checkbox\" id=\"read7\" className=\"reveal-toggler\" />\n            <label for=\"read7\" className=\"reveal-btn\">READ MORE</label>\n          </div>\n          <div className=\"col-md-6 image-deck\">\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture13.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture14.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture15.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture16.png\")} alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 image-deck\">\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture17.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture18.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture19.png\")} alt=\"\" />\n            </div>\n            <div className=\"img animate hook4\">\n              <img src={require(\"../../assets/Picture20.png\")} alt=\"\" />\n            </div>\n          </div>\n          <div className=\"col-md-6 animate hook2\">\n            <h4>Service robots</h4>\n            <p className=\"visible-text\">\n              Service robots are becoming increasingly popular in various\n              settings, from hospitals and schools to offices and factories. At\n              our company, we specialize in creating customized service robots\n              designed to meet our client's specific needs. For example, we have\n              created robots that can assist patients in hospitals, deliver\n              items to classNamerooms, and even help with factory tasks ...\n            </p>\n            <p className=\"hidden-text\">\n              Service robots are becoming increasingly popular in various\n              settings, from hospitals and schools to offices and factories. At\n              our company, we specialize in creating customized service robots\n              designed to meet our client's specific needs. For example, we have\n              created robots that can assist patients in hospitals, deliver\n              items to classNamerooms, and even help with factory tasks.\n              <br /><br />\n              Each service robot is equipped with a range of sensors and cameras\n              that allow it to navigate its environment and complete its tasks\n              efficiently. In addition, our service robots can communicate with\n              humans, providing necessary instructions and information. As the\n              demand for service robots continues to grow, we are proud to be at\n              the forefront of this rapidly evolving industry.\n            </p>\n            <input type=\"checkbox\" id=\"read8\" className=\"reveal-toggler\" />\n            <label for=\"read8\" className=\"reveal-btn\">READ MORE</label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"container-fluid news\">\n      <div className=\"container\">\n        <h2>OUR ROBOT PETS</h2>\n        <div className=\"row row-cols-lg-4 row-cols-md-2 row-cols-1\">\n          <div  data-tilt data-tilt-glare data-tilt-max-glare=\"0.3\"  className=\"col\">\n\n            <div  className=\"card animate hook3\">\n              <img src={require(\"../../assets/image.png\")} alt=\"\" />\n              <h4>Unitree Z1 and Go1</h4>\n              <p>\n                Unitree has launched the robotic arm Z1, which it mounted on its\n                AlienGo or B1 robot, and works with actuator tools such as a\n                dual-suction-cup attachment, two-fingered pincer, a\n                three-fingered soft grasper, that allow it to do things like\n                picking up objects, opening doors, and installing or removing\n                screw\n              </p>\n            </div>\n          </div>\n          <div data-tilt data-tilt-glare data-tilt-max-glare=\"0.3\" className=\"col\">\n            <div  className=\"card animate hook3\">\n              <img src={require(\"../../assets/image (1).png\")} alt=\"\" />\n              <h4>Unitree Go 1</h4>\n              <p>\n                Dustproof and waterproof Robot dog that can inspect in all kinds\n                of weather. It function as a pet, or work in firefighting and\n                investigation. Unitree Go1 is able to run at 4.7m/s.\n              </p>\n            </div>\n          </div>\n          <div data-tilt data-tilt-glare data-tilt-max-glare=\"0.3\" className=\"col\">\n            <div className=\"card animate hook3\">\n              <img src={require(\"../../assets//image (2).png\")} alt=\"\" />\n              <h4>Xiaomi Cyberdog By Xiaomi</h4>\n              <p>\n                A robotic pet for everyone. CyberDog can be personally\n                customized. Xiaomi Cyberdog can run at a speed of 11.52 km / h.\n                It can jump and do backflips.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n        </div>\n    );\n};\n\nexport default PageHome;\n","C:\\Users\\User\\store-robots-master\\src\\Components\\VideoCarusol.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\Header\\HeaderVideo.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\Header\\Navbar.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\allData\\SocialLinks.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\allData\\videoSlider.js",[],[],"C:\\Users\\User\\store-robots-master\\src\\Components\\Home\\HomeVideo.js",[],[],{"ruleId":"76","severity":1,"message":"77","line":6,"column":9,"nodeType":"78","messageId":"79","endLine":6,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":25,"column":9,"nodeType":"78","messageId":"79","endLine":25,"endColumn":20},"no-unused-vars","'VanillaTilt' is assigned a value but never used.","Identifier","unusedVar"]